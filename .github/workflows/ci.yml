# # Thanks to https://github.com/coil-kt/coil/blob/master/.github/workflows/ci.yml
# name: CI

# #on:
# #  push:
# #    tags:
# #      - '*'
# #  pull_request:

# on:
    # push:
        # tags:
            # - '*'
        # branches:
            # - master
            # - dev
            # - feat
    # pull_request:

# jobs:
  # build:
    # name: Build
    # runs-on: ubuntu-latest
    # steps:
      # - name: Checkout
        # uses: actions/checkout@v2
        # with:
          # fetch-depth: 0

      # - name: Validate gradle wrapper
        # uses: gradle/wrapper-validation-action@v1

      # - name: Copy CI gradle.properties
        # run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # - name: Checkout Gradle Build Cache
        # if: ${{ steps.self_hosted.outputs.FLAG != 'self-hosted' }}
        # uses: actions/cache@v2
        # with:
          # path: |
            # ~/.gradle/caches
            # ~/.gradle/wrapper
            # !~/.gradle/wrapper/dists/**/gradle*.zip
          # key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          # restore-keys: |
            # gradle-${{ runner.os }}-

# #      - name: Build Debug
# #        run: ./gradlew clean app:assembleDebug

      # - name: Build
        # run: ./gradlew build

      # - name: Run ktlint
        # run: ./gradlew ktlintCheck

      # - name: Run Lint
        # if: github.event_name  == 'pull_request'
        # run: ./gradlew lintDebug

      # - name: Detekt
        # if: github.event_name  == 'pull_request'
        # run: ./gradlew detekt

      # - name: Setup Ruby
        # if: github.event_name  == 'pull_request'
        # uses: ruby/setup-ruby@v1
        # with:
          # ruby-version: '2.6.3'
          # bundler-cache: true

      # - name: Run Danger
        # if: github.event_name  == 'pull_request'
        # run: |
          # gem install danger
          # bundle exec danger --dangerfile=Dangerfile --danger_id=danger-pr
        # env:
          # DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Prepare Keystore and Local.
        # if: startsWith(github.ref, 'refs/tags/')
        # run: |
          # echo "${{ secrets.KEYSTORE }}" > opensource.jks.asc
          # gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "opensource.jks.asc" > "app/opensource.jks"
          # echo "${{ secrets.SIGNING_GRADLE }}" > signing.gradle.asc
          # gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "signing.gradle.asc" > "app/signing.gradle"
          # echo "openSource.signing.file=signing.gradle" >> local.properties

      # - name: Build Release App
        # if: startsWith(github.ref, 'refs/tags/')
        # run: ./gradlew app:assembleRelease app:bundleRelease

      # - name: Relase bintray
        # if: startsWith(github.ref, 'refs/tags/')
        # run: |
          # ./gradlew build -x test -x lint
          # ./gradlew library:bintrayUpload -x test -x lint -Plibrary_only --no-configure-on-demand --no-parallel
          # ./gradlew library-nav:bintrayUpload -x test -x lint -Plibrary_nav_only  --no-configure-on-demand --no-parallel
          # ./gradlew library-iconics:bintrayUpload -x test -x lint -Plibrary_iconics_only --no-configure-on-demand --no-parallel
        # env:
          # BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          # BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          # BINTRAY_GPG_PASS: ${{ secrets.BINTRAY_GPG_PASS }}
          # NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          # NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      # - name: Collect artifacts
        # run: |
          # COLLECT_PWD=${PWD}
          # mkdir -p "artifacts"
          # find . -name "*.apk" -type f -exec cp {} "artifacts" \;
          # find . -name "*.aab" -type f -exec cp {} "artifacts" \;

      # - name: Archive Artifacts
        # uses: actions/upload-artifact@v2
        # with:
          # name: "App-Artifacts"
          # path: artifacts/*

      # - name: Build Changelog
        # id: github_release
        # uses: mikepenz/release-changelog-builder-action@v1
        # if: startsWith(github.ref, 'refs/tags/')
        # with:
          # configuration: ".github/config/configuration.json"
          # ignorePreReleases: ${{ !contains(github.ref, '-') }}
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release
        # uses: softprops/action-gh-release@91409e712cf565ce9eff10c87a8d1b11b81757ae
        # if: startsWith(github.ref, 'refs/tags/')
        # with:
          # body: ${{steps.github_release.outputs.changelog}}
          # prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          # files: artifacts/*
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Pre Merge Checks
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  ktlint:
    runs-on: [ubuntu-latest]
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache Gradle Folders
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      - name: Run ktlint
        run: ./gradlew ktlintCheck

  detekt:
    runs-on: [ubuntu-latest]
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache Gradle Folders
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      - name: Run detekt
        run: ./gradlew detekt

  test:
    runs-on: [ubuntu-latest]
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache Gradle Folders
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      - name: Run all the tests
        run: ./gradlew test

  build-debug-apk:
    strategy:
      fail-fast: false
      matrix:
        agp: [""]
        kotlin: [""]
        experimental: [false]
        name: ["stable"]
        include:
          - agp: 4.2.+
            experimental: true
            name: AGP-4.2.+
          - kotlin: 1.4.20+
            experimental: true
            name: kotlin-EAP-1.4.20+

    runs-on: [ubuntu-latest]
    continue-on-error: ${{ matrix.experimental }}
    name: Build Debug APK - ${{ matrix.name }} - Experimental ${{ matrix.experimental }}
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      VERSION_AGP: ${{ matrix.agp }}
      VERSION_KOTLIN: ${{ matrix.kotlin }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache Gradle Folders
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      - name: Build the Debug APK
        run: ./gradlew assembleDebug

      - uses: actions/upload-artifact@v2
        with:
          name: appintro-sample-app-${{ matrix.name }}.apk
          path: example/build/outputs/apk/debug/example-debug.apk