apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.mikepenz.aboutlibraries.plugin'
apply plugin: 'kotlin-kapt'

// wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../../signing.gradle'
} catch (ex) {
}

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode release.versionCode
        versionName release.versionName

        multiDexEnabled true

        setProperty("archivesBaseName", "Controlz-v$versionName-c$versionCode")

//        missingDimensionStrategy 'gen-libs', 'library'

/*
        externalNativeBuild {
            // For ndk-build, instead use the ndkBuild block.
            cmake {
                // Passes optional arguments to CMake.
                //arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_static",
                arguments "-DANDROID_TOOLCHAIN=g++"

                // Sets a flag to enable format macro constants for the C compiler.
                //cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
                cppFlags "-std=c++11", "-fexceptions", "-frtti"
            }
        }
*/
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            try {
                signingConfig signingConfigs.debug
            } catch (ex) {
            }
            minifyEnabled false
        }
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ex) {
            }
            zipAlignEnabled true
            minifyEnabled false
        }
        customDebugType {
            debuggable false
        }
    }

    externalNativeBuild {
        // Encapsulates your CMake build configurations.
        cmake {
            // Provides a relative path to your CMake build script.
            version '3.10.2'
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    //ndkPath "/S/Program/Android/Android-SDK/ndk"
    ndkVersion "21.3.6528147"
}

dependencies {

    implementation project(':library')
    implementation project(':library-iconics')
    implementation project(':library-nav')
    //implementation project(':lib:stt')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "androidx.multidex:multidex:${versions.multiDex}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    implementation "androidx.cardview:cardview:${versions.cardview}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "androidx.slidingpanelayout:slidingpanelayout:${versions.slidingpaneLayout}"

    // used to showcase how to load images
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    // needed to fix glide androidX support
    kapt 'com.android.support:support-annotations:28.0.0'
    annotationProcessor 'com.android.support:support-annotations:28.0.0'
//    implementation "com.android.support:support-annotations:28.0.0"
//    annotationProcessor 'com.android.support:support-annotations:28.0.0'

    // the sample uses more advanced functions of the fastadapter
    // https://github.com/mikepenz/FastAdapter/
    implementation "com.mikepenz:fastadapter-extensions-utils:${versions.fastadapter}"
    // used to generate the Open Source section
    // https://github.com/mikepenz/AboutLibraries
    implementation "com.mikepenz:aboutlibraries:${versions.aboutLibs}"

    // used to provide different itemAnimators for the RecyclerView
    // https://github.com/mikepenz/ItemAnimators
    implementation 'com.mikepenz:itemanimators:1.1.0'
    // used to provide the MiniDrawer to normal Drawer crossfade effect via a SlidingPane layout
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/MiniDrawerActivity.java
    // https://github.com/mikepenz/Crossfader
    implementation 'com.mikepenz:crossfader:1.6.0'
    // used to provide the two step crossfade DrawerLayout. Which allows to have a mini layout which transforms to a normal layout within the drawer
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/CrossfadeDrawerLayoutActvitiy.java
    // https://github.com/mikepenz/CrossfadeDrawerLayout
    implementation('com.mikepenz:crossfadedrawerlayout:1.1.0')

    // icon fonts used inside the sample
    // https://github.com/mikepenz/Android-Iconics
    implementation 'com.mikepenz:google-material-typeface:3.0.1.4.original-kotlin@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.3.1.2-kotlin@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.6-kotlin@aar'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
    implementation 'androidx.core:core-ktx:1.3.1'

    // lib material-dialogs
    // https://github.com/afollestad/material-dialogs
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:input:3.3.0'
    implementation 'com.afollestad.material-dialogs:files:3.3.0'
    implementation 'com.afollestad.material-dialogs:color:3.3.0'
    implementation 'com.afollestad.material-dialogs:datetime:3.3.0'
    implementation 'com.afollestad.material-dialogs:bottomsheets:3.3.0'
    implementation 'com.afollestad.material-dialogs:lifecycle:3.3.0'

    // lib DPadView
    // https://github.com/shripal17/DPadView
    implementation 'com.github.shripal17:DPadView:1.0.3'

    // lib HTextView
    // https://github.com/hanks-zyh/HTextView
    implementation "com.hanks:htextview-base:${versions.htextview}"        // base library
    implementation "com.hanks:htextview-fade:${versions.htextview}"        // optional
    implementation "com.hanks:htextview-line:${versions.htextview}"        // optional
    implementation "com.hanks:htextview-scale:${versions.htextview}"       // optional
    implementation "com.hanks:htextview-evaporate:${versions.htextview}"   // optional

    // lib MaterialTextField
    // https://github.com/florent37/MaterialTextField
    implementation 'com.github.florent37:materialtextfield:1.0.7'

    // lib MaterialTextField
    // https://github.com/recruit-lifestyle/PlayPauseButton
    implementation 'com.github.recruit-lifestyle:PlayPauseButton:1.0'

    // lib Grav
    // https://github.com/glomadrian/Grav
    implementation 'com.github.glomadrian:Grav:1.1'

    // lib Loading
    // https://github.com/yankai-victor/Loading
    implementation 'com.victor:lib:1.0.4'

    // lib playpauseview
    // https://github.com/OHoussein/android-material-play-pause-view
    implementation 'com.github.ohoussein.playpauseview:playpauseview:1.0.2'

    // Generate C/C++ Code
    // https://github.com/android/ndk-samples/tree/master/hello-libs
    // uncomment out this one to generate lib binaries,
    // and also uncommented out the one in settings.gradle
    // after lib is generated, just comment them out again
    //api project(':gen-libs')
}

configurations.all {
    resolutionStrategy.force "com.mikepenz:iconics-core:${versions.iconics}"
    resolutionStrategy.force "com.mikepenz:fastadapter:${versions.fastadapter}"
}
